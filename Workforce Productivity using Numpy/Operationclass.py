import numpy as np
import matplotlib.pyplot as plt
# Creating a Class
class IntArray:
    def __init__(self,int_array):
        # Here isinstance() function returns True if the object is of specified types otherwise it return false
        if not isinstance(int_array,np.ndarray) or int_array.dtype!=int:
            raise ValueError("Input must be a NUMPY array of Integers")
        #Initialize the int_array
        self.int_array= int_array
    #self is used to refer to the instance of the class that is calling the method. When we define a method inside a class, we include self as the first parameter so that the method can access instance variables and other methods of that specific object.
    #self makes sure each object has its own independent data.
    #Without self, attributes would not persist across methods.
    #If we just wrote int_array = int_array, the variable would be local to __init__ and lost after the function ends.
    def display(self): 
        print(self.int_array) 
    def salary(self):
        # We have to decide the salary on basis of number of products generated by each member
        array_shape= self.int_array.shape
        #full function will return a new array with same shape and type of given array filled with a fill_value
        money_for_product=np.full(array_shape,7)
        salaries=self.int_array*money_for_product

        print(f"People made {self.int_array} products and this is their salaries {salaries}")
    def show_data(self):

        X= np.arange(len(self.int_array))
        #Creates an array of evenly spaced values within a given interval.
        #It returns a NumPy array
        #Marker for better readability

        #Specific to this Question:
        #"Index (Worker ID)" → Labels X-axis.
        #("Products Made") → Labels Y-axis.
        plt.plot(X,self.int_array,marker='o')
        plt.title("Productivity of Employees ")
        plt.xlabel('Worker ID')
        plt.ylabel('Products per Month')
        #plt.xticks() is used to customize the labels of the X-axis in a plot.
        #earlier the plotting was showing 0, 2 and so on as x lables but after tick it will show for every value of x in label like 0, 1,2 and so on
        plt.xticks(X)
        plt.grid()
        plt.show()
        # And so on we can find for other Company as Well

        
